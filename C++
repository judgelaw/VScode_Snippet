{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"#include std": {
	"prefix": "#include std",
	"body": [
		"#include <bits/stdc++.h>",	
		"using namespace std;",
		"#define rep(i, n) for (int i = 0; i < (int)(n); i++)",
		"",
		"int main() {",
		"	ios::sync_with_stdio(false);",
		"	cin.tie(nullptr);",
		"	$1",
		"}",
	],
	"description": "#include std"
	},

	"#include atcoder": {
		"prefix": "#include atcoder",
		"body": [
			"#include <atcoder/all>",
			"using namespace atcoder;",
		],
		"description": "#include atcoder"
		},

	"#include SRM": {
		"prefix": "#include SRM",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"",
			"class classname{",
			"	public:",
			"	int methodname(int inputchar){",
			"		int ans;",
			"		return  ans;",
			"	}",
			"};",
		],
		"description": "#include SRM"
		},

	"cfgcj": {
		"prefix": "cfgcj",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"#define rep(i, n) for (int i = 0; i < (int)(n); i++)",
			"",
			"void solve(){",
			"",
			"    return",
			"}",
			"",
			"int main() {",
			"    ios::sync_with_stdio(false);",
			"    cin.tie(nullptr);",
			"",
			"    int t;",
			"    cin >> t;",
			"",
			"    rep(_,t){",
			"        solve();",
			"    }",
			"}",
		],
		"description": "CF/GCJ用テンプレート"
	},
	

	"using i64 = long long": {
		"prefix": "using i64 = long long",
		"body": [
			"using i64 = long long;",
		],
		"description": "longlong型定義"
	},

	"using str": {
		"prefix": "using str",
		"body": [
			"using str = string;",
		],
		"description": "using str"
		},

	"#define repst(i,s,t)": {
		"prefix": "#define repst(i,s,t)",
		"body": [
			"#define repst(i, s, t) for (int i = s; i < (int)(t); i++)",
		],
		"description": "3引数rep"
		},
		


	"comb": {
		"prefix": "comb",
		"body": [
			"int comb(int n, int r){",
			"    assert(n>=r);",
			"",
			"    if (r>(n+3)/2){",
			"        r=n-r;",
			"    }",
			"    long long int ret;",
			"    ret=1;",
			"    rep(i,r){",
			"        ret*=n-i;",
			"        ret/=i+1;",
			"    }",
			"    return ret;",
			"}",
			"",
		],
		"description": "コンビネーション"
	},

	"prime(int N)": {
        "prefix": "prime(int N)",
        "body": [
            "vector<int> prime(int N){",
            "    vector<int> P;",
            "    vector<int> f(N+1,0);",
            "    repst(i,2,N+1){",
            "        if (f[i]==0){",
            "            P.push_back(i);",
            "            f[i]=i;",
            "        }",
            "        for (auto j :P){",
            "            if (i*j>N||j>f[i]){",
            "                break;",
            "            }",
            "            f[i*j]=j;",
            "        }",
            "    }",
            "    return P;",
            "}",
        ],
        "description": "線形篩"
    },

	"ctoi": {
		"prefix": "int ctoi",
		"body": [
			"///char型の数字からint型の数字へ変換する",
			"int ctoi(char c) {",
			"	switch (c) {",
			"		case '0': return 0;",
			"		case '1': return 1;",
			"		case '2': return 2;",
			"		case '3': return 3;",
			"		case '4': return 4;",
			"		case '5': return 5;",
			"		case '6': return 6;",
			"		case '7': return 7;",
			"		case '8': return 8;",
			"		case '9': return 9;",
			"		default: return 0;",
			"	}",
			"}",
		],
		"description": "int ctoi"
		},





	"cin": {
		"prefix": "cin",
		"body": [
			"cin >> $1 ;",
		],
		"description": "cin"
	},
		

	"cout": {
		"prefix": "cout",
		"body": [
			"cout << $1 << \"\\n\";",
		],
		"description": "cout"
		},

}
